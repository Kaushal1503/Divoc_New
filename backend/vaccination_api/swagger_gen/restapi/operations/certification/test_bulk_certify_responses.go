// Code generated by go-swagger; DO NOT EDIT.

package certification

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/divoc/api/swagger_gen/models"
)

// TestBulkCertifyOKCode is the HTTP code returned for type TestBulkCertifyOK
const TestBulkCertifyOKCode int = 200

/*TestBulkCertifyOK OK

swagger:response testBulkCertifyOK
*/
type TestBulkCertifyOK struct {
}

// NewTestBulkCertifyOK creates TestBulkCertifyOK with default headers values
func NewTestBulkCertifyOK() *TestBulkCertifyOK {

	return &TestBulkCertifyOK{}
}

// WriteResponse to the client
func (o *TestBulkCertifyOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// TestBulkCertifyBadRequestCode is the HTTP code returned for type TestBulkCertifyBadRequest
const TestBulkCertifyBadRequestCode int = 400

/*TestBulkCertifyBadRequest Invalid input

swagger:response testBulkCertifyBadRequest
*/
type TestBulkCertifyBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewTestBulkCertifyBadRequest creates TestBulkCertifyBadRequest with default headers values
func NewTestBulkCertifyBadRequest() *TestBulkCertifyBadRequest {

	return &TestBulkCertifyBadRequest{}
}

// WithPayload adds the payload to the test bulk certify bad request response
func (o *TestBulkCertifyBadRequest) WithPayload(payload *models.Error) *TestBulkCertifyBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the test bulk certify bad request response
func (o *TestBulkCertifyBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *TestBulkCertifyBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// TestBulkCertifyUnauthorizedCode is the HTTP code returned for type TestBulkCertifyUnauthorized
const TestBulkCertifyUnauthorizedCode int = 401

/*TestBulkCertifyUnauthorized Unauthorized

swagger:response testBulkCertifyUnauthorized
*/
type TestBulkCertifyUnauthorized struct {
}

// NewTestBulkCertifyUnauthorized creates TestBulkCertifyUnauthorized with default headers values
func NewTestBulkCertifyUnauthorized() *TestBulkCertifyUnauthorized {

	return &TestBulkCertifyUnauthorized{}
}

// WriteResponse to the client
func (o *TestBulkCertifyUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(401)
}
